package main

import "fmt"

/*
Задача 8.1 Необходимо создать карту с ключами: «слон», «бегемот», «носорог», «лев»;
В качестве значений нужно использовать пустые структуры. Результат вывести в консоль.
*/

func printMap() {
	myMap := map[string]struct{}{
		"слон":    {},
		"бегемот": {},
		"носорог": {},
		"лев":     {},
	}
	fmt.Println(myMap)
}

/*
Задача 8.2 Необходимо создать карту с элементами: «слон» = 3, «бегемот» = 0, «носорог» = 5, «лев» = 1.
Перебратьзначения: «слон», «бегемот», «осьминог» и вывести сообщения в консоль по шаблону:
«Животное: %s, количество: %d (есть в карте: %v)».
*/

func printMapWithChanges() {
	animals := map[string]int{
		"слон":    3,
		"бегемот": 0,
		"носорог": 5,
		"лев":     1,
	}

	keys := []string{"слон", "бегемот", "носорог", "лев", "орел"}

	for _, key := range keys {
		quantity, isExists := animals[key]
		fmt.Printf("Животное: %s, количество: %d (есть в карте: %v)\n", key, quantity, isExists)
	}

}

/*
Задача 8.3 Необходимо создать карту с ключами: «слон», «бегемот», «носорог», «лев»;
Вкачестве значений нужно использовать пустые структуры. Далее удалить бегемота и
результат вывести в консоль.
*/

func deleteKey(keyForDelete string) {
	animals := map[string]struct{}{
		"слон":    {},
		"бегемот": {},
		"носорог": {},
		"лев":     {},
	}

	delete(animals, keyForDelete)

	fmt.Println(animals)
}

/*
Задача 8.4 Необходимо создать карту с ключами: «слон», «бегемот», «носорог», «лев»;
В качестве значений нужно использовать пустые структуры. Далее добавить «выдра» и
результат вывести в консоль
*/

func addKey(keyForAdd string) {
	animals := map[string]struct{}{
		"слон":    {},
		"бегемот": {},
		"носорог": {},
		"лев":     {},
	}

	animals[keyForAdd] = struct{}{}

	fmt.Println(animals)
}

/*
Задача 8.5 Необходимо создать карту с элементами: «слон» = 3, «бегемот» = 0, «носорог» = 5, «лев» = 1.
Изменить «бегемот» на 2 и вывести результат в консоль
*/

func updateValue(key string, value int) {
	animals := map[string]int{
		"слон":    3,
		"бегемот": 0,
		"носорог": 5,
		"лев":     1,
	}

	// Проверяем наличие ключа в map
	if _, ok := animals[key]; ok {
		// Обновляем значение по ключу
		animals[key] = value

	} else {
		// Если ключ отсутствует
		fmt.Println("Ключ не найден")
	}
	fmt.Println(animals)
}

func main() {
	printMap()
	printMapWithChanges()
	deleteKey("бегемот")
	addKey("выдра")
	updateValue("бегемот", 2)
}
